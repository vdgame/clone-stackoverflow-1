---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import Footer from '../../components/Footer.astro';
---

<Layout title="Ask a Question - Stack Overflow">
  <Header />

  <div class="flex flex-col md:flex-row">
    <!-- Sidebar is hidden on mobile, visible on md screens and up -->
    <div class="hidden md:block">
      <Sidebar />
    </div>

    <main class="flex-1 p-4 md:p-6">
      <div class="max-w-3xl mx-auto">
        <h1 class="text-2xl md:text-[27px] font-normal mb-4">Ask a public question</h1>

        <div class="bg-[#EBF4FB] border border-[#A6CEED] p-4 mb-6 rounded-md">
          <h2 class="text-lg font-normal text-[#3b4045] mb-2">Writing a good question</h2>
          <p class="text-sm text-[#3b4045] mb-2">You're ready to ask a programming-related question and this form will help guide you through the process.</p>
          <p class="text-sm text-[#3b4045]">Looking to ask a non-programming question? See <a href="#" class="text-[#0074cc]">the topics here</a> to find a relevant site.</p>
          <div class="mt-4">
            <h3 class="text-sm font-bold mb-2">Steps</h3>
            <ul class="list-disc list-inside text-sm text-[#3b4045] space-y-1">
              <li>Summarize your problem in a one-line title.</li>
              <li>Describe your problem in more detail.</li>
              <li>Describe what you tried and what you expected to happen.</li>
              <li>Add "tags" which help surface your question to members of the community.</li>
              <li>Review your question and post it to the site.</li>
            </ul>
          </div>
        </div>

        <form class="space-y-4">
          <div class="border border-[#e3e6e8] rounded-md">
            <div class="p-4 border-b border-[#e3e6e8] bg-[#f8f9f9]">
              <div class="flex justify-between items-start">
                <div>
                  <label for="title" class="block text-[15px] font-bold text-[#0c0d0e] mb-1">Title</label>
                  <p class="text-[12px] text-[#3b4045] mb-2">Be specific and imagine you're asking a question to another person.</p>
                </div>
                <div class="hidden md:block">
                  <button type="button" class="text-sm text-[#0074cc]">
                    <svg class="inline-block w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 16 16">
                      <path d="M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zm0 2.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM8 13a.5.5 0 0 1-.5-.5v-5a.5.5 0 0 1 1 0v5a.5.5 0 0 1-.5.5z"></path>
                    </svg>
                    Writing tips
                  </button>
                </div>
              </div>
              <div class="relative">
                <input
                  id="title"
                  type="text"
                  placeholder="e.g. How to center a div with Tailwind CSS"
                  class="w-full py-2 px-3 border border-[#babfc4] rounded focus:border-[#6bbbf7] focus:outline-none focus:shadow-[0_0_0_4px_rgba(0,116,204,0.15)]"
                />
              </div>
            </div>

            <div class="p-4 border-b border-[#e3e6e8]">
              <div class="flex justify-between items-start">
                <div>
                  <label for="body" class="block text-[15px] font-bold text-[#0c0d0e] mb-1">What are the details of your problem?</label>
                  <p class="text-[12px] text-[#3b4045] mb-2">Introduce the problem and expand on what you put in the title. Minimum 20 characters.</p>
                </div>
                <div class="hidden md:block">
                  <button type="button" class="text-sm text-[#0074cc]">
                    <svg class="inline-block w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 16 16">
                      <path d="M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zm0 2.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM8 13a.5.5 0 0 1-.5-.5v-5a.5.5 0 0 1 1 0v5a.5.5 0 0 1-.5.5z"></path>
                    </svg>
                    Formatting tips
                  </button>
                </div>
              </div>

              <!-- Editor Toolbar -->
              <div class="border border-[#babfc4] rounded-t bg-[#f8f9f9] p-1 flex flex-wrap gap-1 mb-[-1px]">
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Bold">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M4 4v2h1V4H4Zm2 0v10h1V4H6Zm6.9 3.5H10V6h2.6c.7 0 1.4.5 1.4 1.25h.1c0-.25-.1-.5-.2-.75h1c.2.3.3.5.1.75 0-.47-.1-1-.2-1.25.1-.62-.3-1.25-.9-1.5.7-.25 1.1-.88 1.1-1.5 0-1.27-1.1-2-2.3-2H9v1h1V2h1.5c.9 0 1.7.5 1.7 1.5 0 .77-.4 1.25-1.3 1.25h-2V6h2.2c.9 0 1.8.48 1.8 1.5 0 .4-.2.75-.5 1h.3Z"></path>
                  </svg>
                </button>
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Italic">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M4 3v1h1.3L8 14H6v1h5v-1H9.7L7 4h2V3H4Z"></path>
                  </svg>
                </button>
                <div class="border-r border-[#babfc4] h-6 mx-1"></div>
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Bulleted List">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M5 4h9v1H5V4Zm0 4h9v1H5V8Zm0 4h9v1H5v-1Z"></path>
                    <circle cx="3" cy="4.5" r="1"></circle>
                    <circle cx="3" cy="8.5" r="1"></circle>
                    <circle cx="3" cy="12.5" r="1"></circle>
                  </svg>
                </button>
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Numbered List">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M5 5h9v1H5V5Zm0 4h9v1H5V9Zm0 4h9v1H5v-1Z"></path>
                    <path d="M3 5.5a.5.5 0 0 1-1 0V4h1v1.5ZM3.5 9h-2v-.5h1v-1H2V7h1.5v2ZM2 11.5v-1h2V11H2.5v.5h-1ZM2.5 13v.5H4v-1H2v.5h.5Z"></path>
                  </svg>
                </button>
                <div class="border-r border-[#babfc4] h-6 mx-1"></div>
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Code">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M7 10.2H4.5V9.7H7V10.2Z"></path>
                    <path d="M6.1 11H4.9C4.9 10.6 4.9 10.4 4.2 10.3L4 11L4.3 13.4C4.7 13.9 5.3 14 5.8 14C6.5 14 7.2 13.4 7.2 12.8C7.1 12.5 7.3 11.9 6.1 11ZM5.9 13.5C5.6 13.9 5.3 13.8 5.1 13.8C4.9 13.8 4.7 13.5 4.5 13.2C4.4 13 4.4 12.8 4.4 12.5C4.4 12.3 4.5 12 4.3 11.8C4.4 11.4 4.9 11.3 5.2 11.3C5.6 11.3 5.8 11.6 5.9 11.9C6.1 12.3 6.2 12.8 5.9 13.5Z"></path>
                    <path d="M5 9H4V8H5V9Z"></path>
                    <path d="M5 7H4V6H5V7Z"></path>
                    <path d="M13 9V11.1L14 11C14.1 11.4 14.2 11.9 14.3 12.4L12.8 12.5C12.3 12.7 12.1 12.4 11.4 12.4C11.1 12.4 10.9 12.5 10.8 12.7C10.5 12.1 10.3 11.8 10 11.4C9.9 11.5 9.8 11.5 9.7 11.5C9.6 11.5 9.4 11.5 9.2 11.5C9.9 11.8 10.3 12.3 10.7 13.1C10.9 13.5 11.1 13.9 11.4 13.9C11.9 13.9 12.3 13.8 12.6 13.5C13.1 13.1 13.3 12.9 13.8 12.8C13.9 12.4 14 11.8 14 11.5L13 11.6V10.1L14 10C14 9.7 14 9.4 14 9.1L13 9Z"></path>
                    <path d="M11.9 10.4C11.8 10.2 11.6 10.2 11.4 10L11.2 9.8C11.2 9.6 11.2 9.4 11.3 9.3C11.5 9.1 11.7 9 11.9 9C12.3 9 12.6 9.3 12.6 9.7C12.6 10.1 12.3 10.4 11.9 10.4Z"></path>
                    <path d="M13.1 8.1C13 8.5 13 8.7 13.1 9.1H14.1C14 8.7 14 8.4 14.1 8H13.1V8.1Z"></path>
                    <path d="M9.5 9.5C9.4 9.4 9.2 9.3 9 9.3C8.8 9.3 8.6 9.4 8.4 9.5L8 9.8L8.3 10.4L8.6 10.1C8.7 10 8.8 10 9 10C9.2 10 9.3 10 9.4 10.1L9.7 10.4L10 9.8L9.5 9.5Z"></path>
                    <path d="M9 8H9.5V7H9C8.5 7 8.2 7.1 7.8 7.4L8.3 8.1C8.5 8 8.8 8 9 8Z"></path>
                    <path d="M3 6H2V5H3V6Z"></path>
                    <path d="M12 6H11V5H12V6Z"></path>
                  </svg>
                </button>
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Code Block">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M5 2h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1zm0 12h10V4H5v10zM3 5h1v1H3zm0 2h1v1H3zm0 2h1v1H3zm0 2h1v1H3zm0 2h1v1H3zm10.07-4.22 1.14-.93 1.14.93-.33-1.33 1.1-.97-1.46-.1-.45-1.28-.45 1.28-1.46.1 1.1.97-.33 1.33zm3.48-2.94-.95-.8.27 1.11 1.3.09-.97.8.28 1.11-1.07-.78-.91.8.2-1.11-1.13-.9 1.4-.08L5 3l.3-1zm-7.31 6.9.71-.7.7.7-.22-.9.72-.65-.93-.07-.27-.86-.28.86-.93.07.72.65-.22.9z"></path>
                  </svg>
                </button>
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Link">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M8.9 10.2H7.7a.3.3 0 1 1 0-.6h1.2c.2 0 .3.1.3.3s-.1.3-.3.3ZM9.3 8.9h.9c.2 0 .4 0 .4.3l.1.7V10c0 .2-.1.3-.3.3s-.3-.1-.3-.3V9.9c0-.2 0-.3-.2-.3h-.6c-.2 0-.3-.1-.3-.3s.1-.4.3-.4Z"></path>
                    <path d="M9.3 7.6v.6c0 .2-.1.3-.3.3s-.3-.1-.3-.3v-.3c0-.2 0-.3-.2-.3H7.7c-.2 0-.3-.1-.3-.3s.1-.3.3-.3h.9c.2 0 .4 0 .4.3l.3.3Zm1.7 1.3h1.8c.2 0 .3.1.3.3s-.1.3-.3.3H11c-.2 0-.3-.1-.3-.3s.1-.3.3-.3Zm-5.5 0h1.8c.2 0 .3.1.3.3s-.1.3-.3.3H5.5c-.2 0-.3-.1-.3-.3s.1-.3.3-.3Z"></path>
                    <path d="M8.7 11.9c-.3.3-.5.5-.9.5H7c-.5 0-.9-.3-.9-.9V9.3c0-.5.3-.9.9-.9h.8c.4 0 .6.2.9.5.3-.3.5-.5.9-.5h.8c.5 0 .9.3.9.9v2.2c0 .5-.3.9-.9.9h-.8c-.4 0-.6-.2-.9-.5Zm0-.6c.1.1.4.5.9.5h.8c.1 0 .3-.1.3-.3V9.3c0-.1-.1-.3-.3-.3h-.8c-.4 0-.8.4-.9.5v1.8Zm-1.7.6h.8c.4 0 .8-.4.9-.5V9.5c-.1-.1-.4-.5-.9-.5H7c-.1 0-.3.1-.3.3v2.2c0 .1.1.3.3.3Z"></path>
                  </svg>
                </button>
                <button type="button" class="p-1 hover:bg-[#e3e6e8] rounded" title="Image">
                  <svg width="18" height="18" viewBox="0 0 18 18" fill="currentColor" class="text-[#6a737c]">
                    <path d="M14 5.2c.2.1.3.2.5.4l-2.3 2.3c-.2-.2-.3-.4-.3-.6l2.1-2.1Zm.9 1c.2.4.2 1-.2 1.3l-2.3 2.3c-.3.3-.8.4-1.2.2l3.7-3.8Zm-.4-.7-2.2 2.2c-.2-.1-.4-.1-.6 0l-1-1c.1-.2.1-.5 0-.7L12.9 4c.7.1 1.2.7 1.6 1.5ZM5.8 13h6.5l-1.1-2.3-.9 1.2-1.5-2.8-3 3.9ZM13 14H5c-.6 0-1-.4-1-1V9c0-.6.4-1 1-1h.5l3-3h5c.4 0 .7.2.9.5l-2.5 2.6 1.5.2c0 .4-.2.8-.5 1l2.1 4.7v.5c0 .3-.1.5-.3.7-.2.2-.4.3-.7.3Z"></path>
                  </svg>
                </button>
              </div>

              <textarea
                id="body"
                rows="12"
                placeholder="Write your question here. Include all the information someone would need to answer your question."
                class="w-full p-3 border border-[#babfc4] rounded-b focus:border-[#6bbbf7] focus:outline-none focus:shadow-[0_0_0_4px_rgba(0,116,204,0.15)]"
              ></textarea>
            </div>

            <div class="p-4 border-b border-[#e3e6e8]">
              <div class="flex justify-between items-start">
                <div>
                  <label for="tags" class="block text-[15px] font-bold text-[#0c0d0e] mb-1">Tags</label>
                  <p class="text-[12px] text-[#3b4045] mb-2">Add up to 5 tags to describe what your question is about</p>
                </div>
                <div class="hidden md:block">
                  <button type="button" class="text-sm text-[#0074cc]">
                    <svg class="inline-block w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 16 16">
                      <path d="M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zm0 2.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0zM8 13a.5.5 0 0 1-.5-.5v-5a.5.5 0 0 1 1 0v5a.5.5 0 0 1-.5.5z"></path>
                    </svg>
                    Tag tips
                  </button>
                </div>
              </div>
              <div class="relative">
                <input
                  id="tags"
                  type="text"
                  placeholder="e.g. (typescript react tailwindcss)"
                  class="w-full py-2 px-3 border border-[#babfc4] rounded focus:border-[#6bbbf7] focus:outline-none focus:shadow-[0_0_0_4px_rgba(0,116,204,0.15)]"
                />
              </div>
            </div>
          </div>

          <div class="flex items-center">
            <button type="submit" class="btn-primary py-2.5 px-4">Review your question</button>
            <div class="ml-4 text-[#3b4045] text-sm">
              <a href="#" class="text-[#0074cc] hover:text-[#0a95ff]">Discard draft</a>
            </div>
          </div>
        </form>
      </div>
    </main>
  </div>

  <Footer />

  <script>
    // Enhanced question posting logic with API support
    const form = document.querySelector('form');
    if (form) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        const title = document.getElementById('title').value;
        const body = document.getElementById('body').value;
        const tags = document.getElementById('tags').value;

        let valid = true;
        let errorMessage = '';

        if (!title) {
          valid = false;
          errorMessage += 'Title is required. ';
        }

        if (!body || body.length < 20) {
          valid = false;
          errorMessage += 'Body must be at least 20 characters. ';
        }

        if (!tags) {
          valid = false;
          errorMessage += 'At least one tag is required.';
        }

        if (valid) {
          // Prepare tag array
          const tagArray = tags.split(/[,\s]+/).filter(tag => tag.trim() !== '');

          // Prepare formatted body with HTML
          const formattedBody = `<p>${body.replace(/\n\n/g, '</p><p>').replace(/\n/g, '<br>')}</p>`;

          try {
            // Show loading state
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.textContent;
            submitBtn.textContent = 'Posting...';
            submitBtn.disabled = true;

            // Submit the question to the API
            const response = await fetch('/api/questions', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                title,
                content: body,
                body: formattedBody, // Full HTML version
                tags: tagArray
              })
            });

            if (!response.ok) {
              const errorData = await response.json();
              throw new Error(errorData.error || 'Failed to post question');
            }

            const question = await response.json();

            // Reset the form
            form.reset();

            // Navigate to the new question page
            window.location.href = `/questions/${question.id}`;
          } catch (error) {
            console.error('Error posting question:', error);
            alert(`Error posting question: ${error.message}`);

            // Reset button state
            const submitBtn = form.querySelector('button[type="submit"]');
            submitBtn.textContent = originalBtnText;
            submitBtn.disabled = false;
          }
        } else {
          alert(errorMessage);
        }
      });
    }
  </script>
</Layout>
