---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import Sidebar from '../../../components/Sidebar.astro';
import RightSidebar from '../../../components/RightSidebar.astro';
import Footer from '../../../components/Footer.astro';
import { Fragment } from 'astro/components';

// Get the tag from the URL parameter
const { tag } = Astro.params;

if (!tag) {
  return Astro.redirect('/questions');
}

// Fetch questions filtered by tag
const response = await fetch(`${Astro.url.origin}/api/questions?tag=${encodeURIComponent(tag)}`);
const data = await response.json();

const {
  questions,
  totalQuestions,
  currentPage,
  totalPages,
  sort
} = data;

// Get current sort from URL or default to 'newest'
const url = new URL(Astro.request.url);
const currentSort = url.searchParams.get('sort') || 'newest';
const page = parseInt(url.searchParams.get('page') || '1');
---

<Layout title={`Questions tagged [${tag}] - Stack Overflow Clone`}>
  <Header />

  <div class="flex flex-col md:flex-row">
    {/* Sidebar is hidden on mobile, visible on md screens and up */}
    <div class="hidden md:block">
      <Sidebar />
    </div>

    <main class="flex-1 p-4 md:p-6">
      <div class="mb-4">
        <div class="flex flex-col gap-4 mb-6">
          <h1 class="text-2xl font-normal">Questions tagged [{tag}]</h1>

          <div class="p-4 bg-[#FDF7E2] border border-[#E6DFC6] rounded-md">
            <div class="tag-description mb-2 text-sm">
              <div class="font-bold mb-1">Tag Info</div>
              <p>
                Questions related to [{tag}]. This tag should be used when asking questions about programming, development issues, and problems related to {tag}.
              </p>
            </div>
            <div class="flex flex-wrap gap-2">
              <a href={`/tags/${tag}/info`} class="text-[#0074cc] text-[13px] hover:text-[#0a95ff]">learn more…</a>
              <a href={`/tags/${tag}/synonyms`} class="text-[#0074cc] text-[13px] hover:text-[#0a95ff]">synonyms</a>
              <a href="/questions/ask" class="text-[#0074cc] text-[13px] hover:text-[#0a95ff]">ask question</a>
            </div>
          </div>
        </div>

        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4 gap-4">
          <div class="text-[13px] text-[#6a737c]">
            {totalQuestions} {totalQuestions === 1 ? 'question' : 'questions'}
          </div>
          <a href="/questions/ask" class="btn-primary text-center sm:text-left">Ask Question</a>
        </div>

        <!-- Tabs for desktop -->
        <div class="hidden md:flex border-b border-[#e3e6e8] mb-4">
          <a href={`/questions/tagged/${tag}?sort=newest`} class={`px-3 py-2 text-sm ${currentSort === 'newest' ? 'text-[#3b4045] border-b-2 border-[#f48024]' : 'text-[#6a737c] hover:text-[#3b4045]'}`}>Newest</a>
          <a href={`/questions/tagged/${tag}?sort=votes`} class={`px-3 py-2 text-sm ${currentSort === 'votes' ? 'text-[#3b4045] border-b-2 border-[#f48024]' : 'text-[#6a737c] hover:text-[#3b4045]'}`}>Votes</a>
          <a href={`/questions/tagged/${tag}?sort=oldest`} class={`px-3 py-2 text-sm ${currentSort === 'oldest' ? 'text-[#3b4045] border-b-2 border-[#f48024]' : 'text-[#6a737c] hover:text-[#3b4045]'}`}>Oldest</a>
        </div>

        <!-- Mobile tabs as dropdown -->
        <div class="md:hidden mb-4">
          <div class="border border-[#e3e6e8] rounded">
            <select id="mobile-tabs" class="w-full p-2 bg-white outline-none text-sm">
              <option value="newest" selected={currentSort === 'newest'}>Newest</option>
              <option value="votes" selected={currentSort === 'votes'}>Votes</option>
              <option value="oldest" selected={currentSort === 'oldest'}>Oldest</option>
            </select>
          </div>
        </div>

        <div class="divide-y">
          {questions.length > 0 ? (
            questions.map((question) => (
              <div class="py-4 grid grid-cols-[auto_1fr] sm:gap-4 gap-2">
                <!-- Vote, answers, views counts -->
                <div class="flex flex-col items-end text-[13px] text-[#6a737c] w-[50px] sm:w-[60px]">
                  <div class="mb-1">
                    <span class={`font-medium ${question.votes < 0 ? 'text-[#d1383d]' : question.votes > 0 ? 'text-[#3d8f58]' : ''}`}>{question.votes}</span> votes
                  </div>
                  <div class="mb-1">
                    <span class={`px-1.5 py-0.5 rounded ${question.answers > 0 ? 'bg-[#5eba7d] text-white' : 'border border-[#6a737c]'}`}>{question.answers}</span> answers
                  </div>
                  <div>
                    <span>{question.views}</span> views
                  </div>
                </div>

                <div>
                  <h3 class="text-[15px] sm:text-[17px] mb-1">
                    <a href={`/questions/${question.id}`} class="text-[#0074cc] hover:text-[#0a95ff]">{question.title}</a>
                  </h3>

                  <div class="text-[12px] sm:text-[13px] text-[#3b4045] mb-2">
                    {question.content}
                  </div>

                  <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-2 sm:gap-0">
                    <div class="flex flex-wrap gap-1">
                      {question.tags.map((tag) => (
                        <a href={`/questions/tagged/${tag}`} class="tag hover:bg-[#d0e3f1]">{tag}</a>
                      ))}
                    </div>

                    <div class="flex items-center text-[11px] sm:text-[12px]">
                      {question.collective && (
                        <a href={`/collectives/${question.collective.slug}`} class="hidden sm:flex items-center mr-2">
                          <div class="w-4 h-4 bg-[#f1f2f3] flex items-center justify-center rounded mr-1">
                            <span class="text-[10px] text-[#525960] font-bold">C</span>
                          </div>
                          <span class="text-[#0074cc]">{question.collective.name}</span>
                        </a>
                      )}

                      <div class="flex items-center">
                        <a href={`/users/${question.user.name}`} class="flex items-center">
                          <img src={question.user.image} alt={question.user.name} class="w-4 h-4 rounded mr-1" />
                          <span class="text-[#0074cc]">{question.user.name}</span>
                        </a>
                        <span class="text-[#6a737c] ml-1">
                          <span class="font-bold">{question.user.reputation}</span>
                        </span>
                        <span class="text-[#6a737c] ml-1">asked {question.timestamp}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))
          ) : (
            <div class="py-8 text-center">
              <p class="text-lg text-[#6a737c]">No questions found with the tag [{tag}]</p>
              <a href="/questions/ask" class="inline-block mt-4 btn-primary">Ask a Question</a>
            </div>
          )}
        </div>

        <!-- Pagination -->
        {totalPages > 1 && (
          <div class="flex justify-center mt-8">
            <div class="flex items-center space-x-1">
              {page > 1 && (
                <a href={`/questions/tagged/${tag}?page=${page - 1}&sort=${currentSort}`} class="w-auto h-8 px-2 flex items-center justify-center rounded border border-[#d6d9dc] hover:bg-[#f8f9f9] text-[#3b4045]">Prev</a>
              )}

              {Array.from({ length: Math.min(5, totalPages) }, (_, i) => {
                const pageNum = i + 1;
                /* pageNum <= totalPages 报错 */
                return pageNum < (totalPages+1) ? (
                  <a
                    href={`/questions/tagged/${tag}?page=${pageNum}&sort=${currentSort}`}
                    class={`w-8 h-8 flex items-center justify-center rounded border border-[#d6d9dc] ${pageNum === page ? 'bg-[#f48024] text-white' : 'hover:bg-[#f8f9f9] text-[#3b4045]'}`}
                  >
                    {pageNum}
                  </a>
                ) : (
                  <Fragment></Fragment>
                );
              })}

              {totalPages > 5 && (
                <Fragment>
                  <span class="px-2">...</span>
                  <a
                    href={`/questions/tagged/${tag}?page=${totalPages}&sort=${currentSort}`}
                    class="w-auto h-8 px-2 flex items-center justify-center rounded border border-[#d6d9dc] hover:bg-[#f8f9f9] text-[#3b4045]"
                  >
                    {totalPages}
                  </a>
                </Fragment>
              )}

              {page < totalPages && (
                <a href={`/questions/tagged/${tag}?page=${page + 1}&sort=${currentSort}`} class="w-auto h-8 px-2 flex items-center justify-center rounded border border-[#d6d9dc] hover:bg-[#f8f9f9] text-[#3b4045]">Next</a>
              )}
            </div>
          </div>
        )}
      </div>
    </main>

    {/* Right sidebar is hidden on mobile and tablet, visible on lg screens and up */}
    <div class="hidden lg:block">
      <RightSidebar />
    </div>
  </div>

  <Footer />
</Layout>

<style>
  .btn-primary {
    @apply text-white bg-[#0a95ff] hover:bg-[#0074cc] px-3 py-2 rounded-[3px] text-[13px] shadow-sm;
  }
  .tag {
    @apply inline-flex items-center px-1.5 py-0.5 rounded text-[12px] bg-[#e1ecf4] text-[#39739d];
  }
</style>

<script>
  // Handle mobile tab selection
  document.addEventListener('DOMContentLoaded', () => {
    const mobileTabSelect = document.getElementById('mobile-tabs');
    if (mobileTabSelect) {
      mobileTabSelect.addEventListener('change', (e) => {
        const tabValue = e.target.value;
        const currentUrl = new URL(window.location.href);
        const tag = window.location.pathname.split('/').pop();
        const page = currentUrl.searchParams.get('page') || '1';
        window.location.href = `/questions/tagged/${tag}?page=${page}&sort=${tabValue}`;
      });
    }
  });
</script>
