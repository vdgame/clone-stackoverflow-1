---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Sidebar from '../../components/Sidebar.astro';
import RightSidebar from '../../components/RightSidebar.astro';
import Footer from '../../components/Footer.astro';

// Get the user ID from the URL parameters
const { id } = Astro.params;

// Fetch user data from our API
const userResponse = await fetch(`${Astro.url.origin}/api/users/${id}`);
const userData = await userResponse.json();

// Check if user exists
if (!userData.user) {
  return Astro.redirect('/404');
}

const { user } = userData;

// Helper function to format numbers with commas
function formatNumber(num: number): string {
  return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

// Helper function to format date as "joined Month Day, Year"
function formatJoinDate(dateString: string): string {
  const date = new Date(dateString);
  return `joined ${date.toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}`;
}

// Helper function to format the last seen date
function formatLastSeen(dateString: string): string {
  const date = new Date(dateString);
  const now = new Date();
  const diffInMillis = now.getTime() - date.getTime();
  const diffInMinutes = Math.floor(diffInMillis / (1000 * 60));

  if (diffInMinutes < 1) return 'seen just now';
  if (diffInMinutes < 60) return `seen ${diffInMinutes} mins ago`;

  const diffInHours = Math.floor(diffInMinutes / 60);
  if (diffInHours < 24) return `seen ${diffInHours} hours ago`;

  const diffInDays = Math.floor(diffInHours / 24);
  if (diffInDays < 30) return `seen ${diffInDays} days ago`;

  const diffInMonths = Math.floor(diffInDays / 30);
  if (diffInMonths < 12) return `seen ${diffInMonths} months ago`;

  const diffInYears = Math.floor(diffInMonths / 12);
  return `seen ${diffInYears} years ago`;
}

// Helper function to format activity date
function formatActivityDate(dateString: string): string {
  const date = new Date(dateString);
  const now = new Date();
  const diffInMillis = now.getTime() - date.getTime();
  const diffInMinutes = Math.floor(diffInMillis / (1000 * 60));

  if (diffInMinutes < 60) return `${diffInMinutes}m ago`;

  const diffInHours = Math.floor(diffInMinutes / 60);
  if (diffInHours < 24) return `${diffInHours}h ago`;

  const diffInDays = Math.floor(diffInHours / 24);
  if (diffInDays < 30) return `${diffInDays}d ago`;

  const diffInMonths = Math.floor(diffInDays / 30);
  if (diffInMonths < 12) return `${diffInMonths}mo ago`;

  const diffInYears = Math.floor(diffInMonths / 12);
  return `${diffInYears}y ago`;
}

// Get the active tab from the URL or default to 'profile'
const url = new URL(Astro.request.url);
const activeTab = url.searchParams.get('tab') || 'profile';
---

<Layout title={`User ${user.displayName} - Stack Overflow`}>
  <Header />

  <div class="flex flex-col md:flex-row">
    {/* Sidebar is hidden on mobile, visible on md screens and up */}
    <div class="hidden md:block">
      <Sidebar />
    </div>

    <main class="flex-1 p-4 md:p-6">
      <!-- User Header -->
      <div class="border-b border-[#e3e6e8] dark:border-gray-700 pb-6 mb-6">
        <div class="flex flex-col md:flex-row">
          <!-- User avatar and stats -->
          <div class="flex items-start mb-4 md:mb-0">
            <div class="mr-4">
              <img
                src={user.profileImage}
                alt={user.displayName}
                class="w-20 h-20 md:w-32 md:h-32 rounded-md"
              />
            </div>

            <div>
              <h1 class="text-2xl md:text-3xl font-normal mb-1">{user.displayName}</h1>
              <div class="text-sm text-[#6a737c] dark:text-gray-400 mb-2">
                {user.location && (
                  <div class="mb-1">{user.location}</div>
                )}
                <div>{formatJoinDate(user.createdAt)}</div>
                <div>{formatLastSeen(user.lastSeen)}</div>
              </div>

              {user.website && (
                <a
                  href={user.website}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="text-[#0074cc] hover:text-[#0a95ff] text-sm"
                >
                  {user.website.replace(/^https?:\/\/(www\.)?/, '')}
                </a>
              )}
            </div>
          </div>

          <!-- Stats box -->
          <div class="md:ml-auto mt-4 md:mt-0">
            <div class="border border-[#e3e6e8] dark:border-gray-700 rounded-md overflow-hidden">
              <div class="bg-[#f8f9f9] dark:bg-gray-800 px-4 py-2 border-b border-[#e3e6e8] dark:border-gray-700">
                <div class="text-[#f48024] text-lg font-bold">
                  {formatNumber(user.reputation)}
                </div>
                <div class="text-xs text-[#6a737c] dark:text-gray-400">reputation</div>
              </div>

              <div class="grid grid-cols-3 divide-x divide-[#e3e6e8] dark:divide-gray-700">
                <div class="px-4 py-2 text-center">
                  <div class="flex items-center justify-center mb-1 space-x-1">
                    <span class="w-2 h-2 rounded-full bg-[#ffcc00]"></span>
                    <span class="text-xs text-[#6a737c] dark:text-gray-400">{user.badges.gold}</span>
                  </div>
                  <div class="text-xs text-[#6a737c] dark:text-gray-400">gold</div>
                </div>

                <div class="px-4 py-2 text-center">
                  <div class="flex items-center justify-center mb-1 space-x-1">
                    <span class="w-2 h-2 rounded-full bg-[#c5c5c5]"></span>
                    <span class="text-xs text-[#6a737c] dark:text-gray-400">{user.badges.silver}</span>
                  </div>
                  <div class="text-xs text-[#6a737c] dark:text-gray-400">silver</div>
                </div>

                <div class="px-4 py-2 text-center">
                  <div class="flex items-center justify-center mb-1 space-x-1">
                    <span class="w-2 h-2 rounded-full bg-[#cc7a00]"></span>
                    <span class="text-xs text-[#6a737c] dark:text-gray-400">{user.badges.bronze}</span>
                  </div>
                  <div class="text-xs text-[#6a737c] dark:text-gray-400">bronze</div>
                </div>
              </div>

              <div class="px-4 py-2 border-t border-[#e3e6e8] dark:border-gray-700">
                <div class="grid grid-cols-2 gap-2 text-xs">
                  <div>
                    <div class="text-[#6a737c] dark:text-gray-400">questions</div>
                    <div>{formatNumber(user.stats.questionCount)}</div>
                  </div>
                  <div>
                    <div class="text-[#6a737c] dark:text-gray-400">answers</div>
                    <div>{formatNumber(user.stats.answerCount)}</div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- User content tabs -->
      <div>
        <!-- Tab navigation -->
        <div class="border-b border-[#e3e6e8] dark:border-gray-700 mb-6">
          <nav class="flex flex-wrap -mb-px">
            <a
              href={`/users/${id}?tab=profile`}
              class={`inline-flex items-center py-2 px-4 border-b-2 text-sm font-medium ${activeTab === 'profile' ? 'border-[#f48024] text-[#232629] dark:text-white' : 'border-transparent text-[#6a737c] hover:text-[#232629] hover:border-[#e3e6e8] dark:text-gray-400 dark:hover:text-white dark:hover:border-gray-600'}`}
            >
              Profile
            </a>
            <a
              href={`/users/${id}?tab=activity`}
              class={`inline-flex items-center py-2 px-4 border-b-2 text-sm font-medium ${activeTab === 'activity' ? 'border-[#f48024] text-[#232629] dark:text-white' : 'border-transparent text-[#6a737c] hover:text-[#232629] hover:border-[#e3e6e8] dark:text-gray-400 dark:hover:text-white dark:hover:border-gray-600'}`}
            >
              Activity
            </a>
            <a
              href={`/users/${id}?tab=answers`}
              class={`inline-flex items-center py-2 px-4 border-b-2 text-sm font-medium ${activeTab === 'answers' ? 'border-[#f48024] text-[#232629] dark:text-white' : 'border-transparent text-[#6a737c] hover:text-[#232629] hover:border-[#e3e6e8] dark:text-gray-400 dark:hover:text-white dark:hover:border-gray-600'}`}
            >
              Answers
            </a>
            <a
              href={`/users/${id}?tab=questions`}
              class={`inline-flex items-center py-2 px-4 border-b-2 text-sm font-medium ${activeTab === 'questions' ? 'border-[#f48024] text-[#232629] dark:text-white' : 'border-transparent text-[#6a737c] hover:text-[#232629] hover:border-[#e3e6e8] dark:text-gray-400 dark:hover:text-white dark:hover:border-gray-600'}`}
            >
              Questions
            </a>
            <a
              href={`/users/${id}?tab=tags`}
              class={`inline-flex items-center py-2 px-4 border-b-2 text-sm font-medium ${activeTab === 'tags' ? 'border-[#f48024] text-[#232629] dark:text-white' : 'border-transparent text-[#6a737c] hover:text-[#232629] hover:border-[#e3e6e8] dark:text-gray-400 dark:hover:text-white dark:hover:border-gray-600'}`}
            >
              Tags
            </a>
            <a
              href={`/users/${id}?tab=badges`}
              class={`inline-flex items-center py-2 px-4 border-b-2 text-sm font-medium ${activeTab === 'badges' ? 'border-[#f48024] text-[#232629] dark:text-white' : 'border-transparent text-[#6a737c] hover:text-[#232629] hover:border-[#e3e6e8] dark:text-gray-400 dark:hover:text-white dark:hover:border-gray-600'}`}
            >
              Badges
            </a>
          </nav>
        </div>

        <!-- Tab content -->
        <div>
          {/* Profile Tab */}
          {activeTab === 'profile' && (
            <div>
              {/* About Me section */}
              <div class="mb-8">
                <h2 class="text-xl mb-4">About</h2>
                <div class="prose dark:prose-invert max-w-none">
                  <p>{user.aboutMe || 'This user has not written an about me section yet.'}</p>
                </div>
              </div>

              {/* Stats section */}
              <div class="mb-8">
                <h2 class="text-xl mb-4">Stats</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div class="border border-[#e3e6e8] dark:border-gray-700 rounded-md overflow-hidden">
                    <div class="bg-[#f8f9f9] dark:bg-gray-800 px-4 py-2 border-b border-[#e3e6e8] dark:border-gray-700">
                      <h3 class="text-[#6a737c] dark:text-gray-400 font-normal">Questions</h3>
                    </div>
                    <div class="p-4">
                      <div class="flex justify-between mb-2">
                        <span class="text-[#6a737c] dark:text-gray-400">Total</span>
                        <span>{formatNumber(user.stats.questionCount)}</span>
                      </div>
                    </div>
                  </div>

                  <div class="border border-[#e3e6e8] dark:border-gray-700 rounded-md overflow-hidden">
                    <div class="bg-[#f8f9f9] dark:bg-gray-800 px-4 py-2 border-b border-[#e3e6e8] dark:border-gray-700">
                      <h3 class="text-[#6a737c] dark:text-gray-400 font-normal">Answers</h3>
                    </div>
                    <div class="p-4">
                      <div class="flex justify-between mb-2">
                        <span class="text-[#6a737c] dark:text-gray-400">Total</span>
                        <span>{formatNumber(user.stats.answerCount)}</span>
                      </div>
                      <div class="flex justify-between">
                        <span class="text-[#6a737c] dark:text-gray-400">Accepted</span>
                        <span>{formatNumber(user.stats.acceptedAnswerCount)}</span>
                      </div>
                    </div>
                  </div>

                  <div class="border border-[#e3e6e8] dark:border-gray-700 rounded-md overflow-hidden">
                    <div class="bg-[#f8f9f9] dark:bg-gray-800 px-4 py-2 border-b border-[#e3e6e8] dark:border-gray-700">
                      <h3 class="text-[#6a737c] dark:text-gray-400 font-normal">Votes</h3>
                    </div>
                    <div class="p-4">
                      <div class="flex justify-between">
                        <span class="text-[#6a737c] dark:text-gray-400">Cast</span>
                        <span>{formatNumber(user.stats.voteCount)}</span>
                      </div>
                    </div>
                  </div>

                  <div class="border border-[#e3e6e8] dark:border-gray-700 rounded-md overflow-hidden">
                    <div class="bg-[#f8f9f9] dark:bg-gray-800 px-4 py-2 border-b border-[#e3e6e8] dark:border-gray-700">
                      <h3 class="text-[#6a737c] dark:text-gray-400 font-normal">Badges</h3>
                    </div>
                    <div class="p-4">
                      <div class="flex justify-between mb-2">
                        <div class="flex items-center">
                          <span class="w-2 h-2 rounded-full bg-[#ffcc00] mr-2"></span>
                          <span class="text-[#6a737c] dark:text-gray-400">Gold</span>
                        </div>
                        <span>{formatNumber(user.badges.gold)}</span>
                      </div>
                      <div class="flex justify-between mb-2">
                        <div class="flex items-center">
                          <span class="w-2 h-2 rounded-full bg-[#c5c5c5] mr-2"></span>
                          <span class="text-[#6a737c] dark:text-gray-400">Silver</span>
                        </div>
                        <span>{formatNumber(user.badges.silver)}</span>
                      </div>
                      <div class="flex justify-between">
                        <div class="flex items-center">
                          <span class="w-2 h-2 rounded-full bg-[#cc7a00] mr-2"></span>
                          <span class="text-[#6a737c] dark:text-gray-400">Bronze</span>
                        </div>
                        <span>{formatNumber(user.badges.bronze)}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* Top Tags section */}
              {user.topTags && user.topTags.length > 0 && (
                <div class="mb-8">
                  <h2 class="text-xl mb-4">Top tags</h2>
                  <div class="overflow-x-auto">
                    <table class="w-full border-collapse">
                      <thead>
                        <tr class="bg-[#f8f9f9] dark:bg-gray-800 text-left">
                          <th class="px-4 py-2 border-y border-[#e3e6e8] dark:border-gray-700 font-normal text-[#6a737c] dark:text-gray-400">Tag</th>
                          <th class="px-4 py-2 border-y border-[#e3e6e8] dark:border-gray-700 font-normal text-[#6a737c] dark:text-gray-400">Score</th>
                          <th class="px-4 py-2 border-y border-[#e3e6e8] dark:border-gray-700 font-normal text-[#6a737c] dark:text-gray-400">Posts</th>
                        </tr>
                      </thead>
                      <tbody>
                        {user.topTags.map((tag: any) => (
                          <tr class="border-b border-[#e3e6e8] dark:border-gray-700">
                            <td class="px-4 py-2">
                              <a href={`/questions/tagged/${tag.name}`} class="inline-flex items-center py-0.5 px-1.5 bg-[#e1ecf4] text-[#2c5877] text-xs rounded hover:bg-[#d0e3f1] dark:bg-blue-900/30 dark:text-blue-300 dark:hover:bg-blue-900/50">
                                {tag.name}
                              </a>
                            </td>
                            <td class="px-4 py-2 text-[#0074cc]">{formatNumber(tag.score)}</td>
                            <td class="px-4 py-2">{formatNumber(tag.posts)}</td>
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                </div>
              )}

              {/* Top Posts section */}
              <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                {/* Top Questions */}
                {user.topQuestions && user.topQuestions.length > 0 && (
                  <div>
                    <h2 class="text-xl mb-4">Top questions</h2>
                    <ul class="divide-y divide-[#e3e6e8] dark:divide-gray-700">
                      {user.topQuestions.map((question: any) => (
                        <li class="py-3">
                          <div class="flex items-start">
                            <div class="min-w-[44px] text-center mr-3">
                              <div class="text-[#0074cc] font-medium">{formatNumber(question.votes)}</div>
                              <div class="text-xs text-[#6a737c] dark:text-gray-400">votes</div>
                            </div>
                            <a href={question.link} class="flex-grow text-[#0074cc] hover:text-[#0a95ff]">
                              {question.title}
                            </a>
                          </div>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}

                {/* Top Answers */}
                {user.topAnswers && user.topAnswers.length > 0 && (
                  <div>
                    <h2 class="text-xl mb-4">Top answers</h2>
                    <ul class="divide-y divide-[#e3e6e8] dark:divide-gray-700">
                      {user.topAnswers.map((answer: any) => (
                        <li class="py-3">
                          <div class="flex items-start">
                            <div class="min-w-[44px] text-center mr-3">
                              <div class="text-[#0074cc] font-medium">{formatNumber(answer.votes)}</div>
                              <div class="text-xs text-[#6a737c] dark:text-gray-400">votes</div>
                            </div>
                            <a href={answer.link} class="flex-grow text-[#0074cc] hover:text-[#0a95ff]">
                              {answer.title}
                            </a>
                            {answer.accepted && (
                              <div class="ml-2 text-[#2e7d32] dark:text-green-400">
                                <svg aria-hidden="true" width="18" height="18" viewBox="0 0 18 18">
                                  <path d="M9 1.5C4.86 1.5 1.5 4.86 1.5 9c0 4.14 3.36 7.5 7.5 7.5 4.14 0 7.5-3.36 7.5-7.5 0-4.14-3.36-7.5-7.5-7.5ZM7.33 12.33 4 9l1-1 2.33 2.33L12.66 5l1 1-6.33 6.33Z" fill="currentColor"></path>
                                </svg>
                              </div>
                            )}
                          </div>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            </div>
          )}

          {/* Activity Tab */}
          {activeTab === 'activity' && user.recentActivity && (
            <div>
              <h2 class="text-xl mb-4">Recent activity</h2>

              {user.recentActivity.length > 0 ? (
                <ul class="divide-y divide-[#e3e6e8] dark:divide-gray-700">
                  {user.recentActivity.map((activity: any) => (
                    <li class="py-3">
                      <div class="flex">
                        <div class="mr-3 text-[#6a737c] dark:text-gray-400 text-sm">
                          {activity.type === 'question' && (
                            <div class="flex items-center">
                              <svg aria-hidden="true" width="18" height="18" viewBox="0 0 18 18" class="mr-1">
                                <path d="M9 1C4.6 1 1 4.6 1 9s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8ZM8 14.8V13H7v1.8h1Zm.85-9.71c.14.14.25.33.31.48.7.15.13.32.15.5.04.18.03.35.02.51-.03.25-.1.49-.24.71-.1.15-.21.28-.36.4-.1.07-.21.16-.31.22-.12.1-.23.2-.31.26a2.01 2.01 0 0 0-.3.35c-.04.08-.08.17-.1.25-.05.13-.09.28-.1.42-.03.14-.03.28-.03.43v.28H7c0-.35.03-.5.05-.64.02-.15.06-.29.1-.42.05-.13.12-.25.21-.37.1-.13.21-.24.33-.34.1-.1.21-.18.3-.25.09-.08.17-.16.24-.25.07-.09.12-.19.16-.3.06-.17.07-.36.03-.54-.05-.2-.13-.38-.27-.52-.16-.15-.37-.24-.59-.24-.17 0-.32.05-.47.13a.93.93 0 0 0-.32.36c-.1.19-.17.42-.1.67H4.9c0-.35.04-.64.13-.92.08-.28.21-.52.39-.72.17-.2.37-.36.61-.47.24-.12.51-.18.8-.18.27 0 .52.05.76.14.24.1.45.22.63.4Z" fill="currentColor"></path>
                              </svg>
                              asked
                            </div>
                          )}
                          {activity.type === 'answer' && (
                            <div class="flex items-center">
                              <svg aria-hidden="true" width="18" height="18" viewBox="0 0 18 18" class="mr-1">
                                <path d="M14 1H3a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h6.59l3.7 3.71A1 1 0 0 0 14 19a.84.84 0 0 0 .4-.1A1 1 0 0 0 15 18v-3h1a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2ZM9 14H5a1 1 0 0 1 0-2h4a1 1 0 0 1 0 2Zm5-5H5a1 1 0 0 1 0-2h9a1 1 0 0 1 0 2Zm0-4H5a1 1 0 0 1 0-2h9a1 1 0 1 1 0 2Z" fill="currentColor"></path>
                              </svg>
                              answered
                            </div>
                          )}
                          {activity.type === 'comment' && (
                            <div class="flex items-center">
                              <svg aria-hidden="true" width="18" height="18" viewBox="0 0 18 18" class="mr-1">
                                <path d="M1 2h16c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1h-2v3.5l-3.5-3.5H1c-.6 0-1-.4-1-1V3c0-.6.4-1 1-1Z" fill="currentColor"></path>
                              </svg>
                              commented
                            </div>
                          )}
                        </div>

                        <div class="flex-grow">
                          <a href={activity.link} class="text-[#0074cc] hover:text-[#0a95ff]">
                            {activity.title}
                          </a>
                          {activity.votes !== undefined && (
                            <span class="ml-2 text-[#6a737c] dark:text-gray-400 text-sm">
                              {activity.votes} votes
                            </span>
                          )}
                        </div>

                        <div class="ml-3 text-[#6a737c] dark:text-gray-400 text-sm whitespace-nowrap">
                          {formatActivityDate(activity.date)}
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              ) : (
                <p class="text-[#6a737c] dark:text-gray-400">This user has no recent activity.</p>
              )}
            </div>
          )}

          {/* Other tabs would be implemented similarly */}
          {(activeTab === 'answers' || activeTab === 'questions' || activeTab === 'tags' || activeTab === 'badges') && (
            <div class="p-8 text-center text-[#6a737c] dark:text-gray-400">
              <p>This tab is not fully implemented in the demo.</p>
              <p class="mt-2">Check out the "Profile" and "Activity" tabs to see user information.</p>
            </div>
          )}
        </div>
      </div>
    </main>

    {/* Right sidebar is hidden on mobile and tablet, visible on lg screens and up */}
    <div class="hidden lg:block">
      <RightSidebar />
    </div>
  </div>

  <Footer />
</Layout>

<style>
  .tag {
    font-size: 0.7rem;
    padding: 0.3em 0.5em;
    background-color: #e1ecf4;
    color: #2c5877;
    border-radius: 3px;
    line-height: 1;
    text-decoration: none;
  }
  .tag:hover {
    background-color: #d0e3f1;
  }

  .dark .tag {
    background-color: rgba(59, 130, 246, 0.2);
    color: #93c5fd;
  }
  .dark .tag:hover {
    background-color: rgba(59, 130, 246, 0.3);
  }

  .prose p {
    margin-bottom: 1rem;
  }

  .prose a {
    color: #0074cc;
    text-decoration: none;
  }

  .prose a:hover {
    color: #0a95ff;
  }

  .dark .prose {
    color: #e2e8f0;
  }

  .dark .prose a {
    color: #93c5fd;
  }

  .dark .prose a:hover {
    color: #bfdbfe;
  }
</style>
